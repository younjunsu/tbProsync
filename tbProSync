#!/bin/bash

# SOURCE DB/USR
SOURCE_DB_USER=sys
SOURCE_DB_PASS=tibero

# SOURCE/TARGET 구성
SOURCE_MODE=TAC
TARGET_MODE=TAC



PROSYNC_SYNC_NAME="A3->B3"
# ProSync
PROSYNC_TOP_ID=prosync_sync

# ProSync SOURCE/TARGET 유저
PROSYNC_SOURCE_USER=sys
PROSYNC_TARGET_USER=sys

# ProSync SOURCE/TARGET 디비 링크
PROSYNC_SOURCE_DBLINK=p_source
PROSYNC_TARGET_DBLINK=p_target

#####################################################################################
function_monitor(){
# 소스 
SOURCE_DATE_TSN=`tbsql ${SOURCE_DB_USER}/${SOURCE_DB_PASS} -s <<EOF
set pagesize 0
set feedback off
SELECT
'success'||','||
to_char(sysdate,'YYYY/MM/DD HH24:MI:SS')||','||
TRUNC((CAST(sysdate as date) - TO_DATE('1970-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS')) * 86400)||','||
current_tsn as source_date_tsn
FROM 
v\\$database;
EOF`


# 타겟 
TARGET_DATE_TSN=`tbsql ${SOURCE_DB_USER}/${SOURCE_DB_PASS} -s <<EOF
set pagesize 0
set feedback off
select
'success'||','||
to_char(time,'YYYY/MM/DD HH24:MI:SS')||','||
TRUNC((CAST(time as date) - TO_DATE('1970-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS')) * 86400)||','||
tsn as target_date_tsn
from \${PROSYNC_TARGET_USER}.prs_lct@\${PROSYNC_TARGET_DBLINK};
EOF`

PROSYNC_CURRENT_TIME=`echo ${SOURCE_DATE_TSN} |awk -F , '{print $2}'`
PROSYNC_SOURCE_TIME=`echo ${SOURCE_DATE_TSN} |awk -F , '{print $2}'`
PROSYNC_SOURCE_UNIX_TIME=`echo ${SOURCE_DATE_TSN} |awk -F , '{print $3}'`
PROSYNC_SOURCE_TSN=`echo ${SOURCE_DATE_TSN} |awk -F , '{print $4}'`
PROSYNC_TARGET_TIME=`echo ${TARGET_DATE_TSN} |awk -F , '{print $2}'`
PROSYNC_TARGET_UNIX_TIME=`echo ${TARGET_DATE_TSN} |awk -F , '{print $3}'`
PROSYNC_TARGET_TSN=`echo ${TARGET_DATE_TSN} |awk -F , '{print $4}'`
PROSYNC_UNIX_TIME_GAP=$((PROSYNC_SOURCE_UNIX_TIME - PROSYNC_TARGET_UNIX_TIME))
PROSYNC_HOURS_TIME_GAP=$((PROSYNC_UNIX_TIME_GAP / 3600))  # 시간
PROSYNC_MINUTES_TIME_GAP=$(((PROSYNC_UNIX_TIME_GAP % 3600) / 60))  # 분
PROSYNC_SECONDS_TIME_GAP=$((PROSYNC_UNIX_TIME_GAP % 60))  # 초
PROSYNC_TSN_GAP=$((PROSYNC_SOURCE_TSN - PROSYNC_TARGET_TSN))



TARGET_DELAY_ARCHIVE=`tbsql ${SOURCE_DB_USER}/${SOURCE_DB_PASS} -s <<EOF
set pagesize 0
set feedback off
select
'seq='||sequence#||', thread='||thread#||', tsn='||first_change#||', filename='||substr(name,instr(name,'/',-1)+1)
from v\\$archived_log
where 
first_change# > (select tsn from \${PROSYNC_TARGET_USER}.prs_lct@\${PROSYNC_TARGET_DBLINK})
order by sequence#
;
EOF
`


TARGET_DELAY_ARCHIVE_TOTAL_COUNT=`echo "${TARGET_DELAY_ARCHIVE[@]}" | awk '{for (i=1; i<=NF; i++) printf $i (i%4==0 ? "\n" : " ")}' |wc -l`
TARGET_DELAY_ARCHIVE_HEAD=`echo ${TARGET_DELAY_ARCHIVE[@]} | awk '{for (i=1; i<=NF; i++) printf $i (i%4==0 ? "\n" : " ")}' |awk '{print "     - "$0}' |head -n 1`
TARGET_DELAY_ARCHIVE_TAIL=`echo ${TARGET_DELAY_ARCHIVE[@]} | awk '{for (i=1; i<=NF; i++) printf $i (i%4==0 ? "\n" : " ")}' |awk '{print "     - "$0}' |tail -n 1`

if [ ${TARGET_DELAY_ARCHIVE_TOTAL_COUNT} -le 1 ]; then
       TARGET_DELAY_ARCHIVE_SKIP_COUNT="0"
       TARGET_DELAY_ARCHIVE_TAIL=
elif [ ${TARGET_DELAY_ARCHIVE_TOTAL_COUNT} -le 2 ]; then
       TARGET_DELAY_ARCHIVE_SKIP_COUNT="0"
elif [ ${TARGET_DELAY_ARCHIVE_TOTAL_COUNT} -gt 2 ]; then
       TARGET_DELAY_ARCHIVE_SKIP_COUNT=$((TARGET_DELAY_ARCHIVE_TOTAL_COUNT - 2))
else
       TARGET_DELAY_ARCHIVE_SKIP_COUNT="error"
fi



clear
echo "##############################################"
echo "## ProSync Name: ${PROSYNC_SYNC_NAME} (TOP_ID: ${PROSYNC_TOP_ID})"
echo "##############################################"
if [ -z ${PMON_INTERVAL} ]; then
echo " ProSync Monitor"
else 
echo " ProSync Monitor (Interval ${PMON_INTERVAL} sec)"
fi
printf "************************************************************************************************************\n"
printf " SOURCE/TARGET TSN\n"
printf "************************************************************************************************************\n"
printf "  %-30s %-30s %-30s\n" "SOURCE(${SOURCE_MODE})" "TARGET(${TARGET_MODE})" "TSN GAP/CURRENT TIME"
printf " %-30s %-30s %-30s\n" "------------------" "------------------" "------------------------------------------"
printf "  %-30s %-30s %-30s\n" "${PROSYNC_SOURCE_USER}" "${PROSYNC_TARGET_USER}" "GAP: ${PROSYNC_TSN_GAP} (CUR: ${PROSYNC_CURRENT_TIME})"
printf "\n"
printf "************************************************************************************************************\n"
printf " SOURCE/TARGET TIME\n"
printf "************************************************************************************************************\n"
printf "   - SOURCE TSN: %-10d         (Apply time: %-20s)\n" "$PROSYNC_SOURCE_TSN" "$PROSYNC_SOURCE_TIME"
printf "   - TARGET TSN: %-10d         (Apply time: %-20s)\n" "$PROSYNC_TARGET_TSN" "$PROSYNC_TARGET_TIME"
printf "   - TSN    GAP: %-10d         (%d/%d)\n" "$PROSYNC_TSN_GAP" "${PROSYNC_TARGET_TSN}" "${PROSYNC_SOURCE_TSN}"
printf "   - TIME   GAP: %d hours, %d minutes, %d seconds\n" "$PROSYNC_HOURS_TIME_GAP" "$PROSYNC_MINUTES_TIME_GAP" "$PROSYNC_SECONDS_TIME_GAP"
printf "\n"
printf "************************************************************************************************************\n"
printf " SOURCE/TARGET ARCHVE GAP\n"
printf "************************************************************************************************************\n"
echo "   * Delay Archive Count: ${TARGET_DELAY_ARCHIVE_TOTAL_COUNT}"
echo "  -------------------------------------------------"
echo "${TARGET_DELAY_ARCHIVE_HEAD}"
echo "              ... skip (${TARGET_DELAY_ARCHIVE_SKIP_COUNT}) ..."
echo "${TARGET_DELAY_ARCHIVE_TAIL}"
printf "\n"
echo ""
echo ""

}

function_help(){
    echo "Usage: ./tbProsync [OPTION]"
    echo ""
    echo "Options:"
    echo "  sync           Synchronize data between source and target."
    echo "  monitor, mon, pmon"
    echo "                 Monitor synchronization processes and statuses."
    echo "  help           Display this help message."
    echo ""
    echo "Examples:"
    echo "  ./tbProsync pmon         # Monitor synchronization processes."
    echo "  ./tbProsync help         # Show help message."
    echo ""
    echo "For more information, refer to the user manual or contact support."
}

TBPROSYNC_OPTION1=$1
TBPROSYNC_OPTION2=$2
case ${TBPROSYNC_OPTION1} in
       "sync")   
              function_sync_check
       ;;
       "monitor"|"mon"|"pmon")
              if [ -z "${TBPROSYNC_OPTION2}" ]; then
                     function_monitor
              else
                     PMON_INTERVAL=${TBPROSYNC_OPTION2}
                     while true; do
                            function_monitor
                            sleep ${PMON_INTERVAL}
                     done
              fi             
       ;;
       *)
              function_help
       ;;
esac



#####################################################################################
# 디버깅 소스
#####################################################################################
# 테스트
# SOURCE/TARGET 동기화 차이 확인
# PROSYNC_SOURCE_TSN=$((RANDOM % 32767)) #랜덤 16비트 정수의 최대 값 32767
# PROSYNC_TARGET_TSN=$((RANDOM % 32767)) #랜덤 16비트 정수의 최대 값 32767
# PROSYNC_TSN_GAP=$((PROSYNC_SOURCE_TSN - PROSYNC_TARGET_TSN)) #랜덤 16비트 정수의 최대 값 32767

# PROSYNC_CURRENT_TIME=`date +%Y/%m/%d" "%T`

# PROSYNC_SOURCE_TIME=`date +%Y/%m/%d" "%T`
# PROSYNC_TARGET_TIME=`date +%Y/%m/%d" "%T`

# PROSYNC_TARGET_TSN=$((RANDOM % 32767)) #랜덤 16비트 정수의 최대 값 32767

# PROSYNC_SOURCE_UNIX_TIME=`date +%s`
# PROSYNC_TARGET_UNIX_TIME=`date +%s`
# PROSYNC_TARGET_UNIX_TIME=$((PROSYNC_TARGET_UNIX_TIME - 1))
# PROSYNC_UNIX_TIME_GAP=$((PROSYNC_SOURCE_UNIX_TIME - PROSYNC_TARGET_UNIX_TIME))

# ROSYNC_HOURS_TIME_GAP=$((PROSYNC_UNIX_TIME_GAP / 3600))  # 시간
# PROSYNC_MINUTES_TIME_GAP=$(((PROSYNC_UNIX_TIME_GAP % 3600) / 60))  # 분
# PROSYNC_SECONDS_TIME_GAP=$((PROSYNC_UNIX_TIME_GAP % 60))  # 초
